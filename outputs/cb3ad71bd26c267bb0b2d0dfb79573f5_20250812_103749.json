{
  "text": "Amazon ECS clusters for the external launch type\nAmazon ECS Anywhere provides support for registering an external instance\nsuch as an on-premises server or virtual machine (VM), to your Amazon ECS cluster. External\ninstances are optimized for running applications that generate outbound traffic or process\ndata. If your application requires inbound traffic, the lack of Elastic Load Balancing support makes running\nthese workloads less efficient. Amazon ECS added a new\nEXTERNAL launch type that you\ncan use to create services or run tasks on your external instances.\nSupported operating systems and system architectures\nThe following is the list of supported operating systems and system architectures.\n-\nAmazon Linux 2\n-\nAmazon Linux 2023\n-\nCentOS Stream 9\n-\nRHEL 7, RHEL 8, RHEL 9 — Neither Docker or RHEL's open package repositories support installing Docker natively on RHEL. You must ensure that Docker is installed before you run the install script that's described in this document.\n-\nFedora 32, Fedora 33, Fedora 40\n-\nopenSUSE Tumbleweed\n-\nUbuntu 18, Ubuntu 20, Ubuntu 22, Ubuntu 24\n-\nDebian 10\nImportant\nDebian 9 Long Term Support (LTS support) ended on June 30, 2022 and is no longer supported by Amazon ECS Anywhere.\n-\nDebian 11\n-\nDebian 12\n-\nSUSE Enterprise Server 15\n-\nThe\nx86_64and\nARM64CPU architectures are supported.\n-\nThe following Windows operating system versions are supported:\n-\nWindows Server 2022\n-\nWindows Server 2019\n-\nWindows Server 2016\n-\nWindows Server 20H2\n-\nConsiderations\nBefore you start using external instances, be aware of the following considerations.\n-\nYou can register an external instance to one cluster at a time. For instructions on how to register an external instance with a different cluster, see Deregistering an Amazon ECS external instance.\n-\nYour external instances require an IAM role that allows them to communicate with AWS APIs. For more information, see Amazon ECS Anywhere IAM role.\n-\nYour external instances should not have a preconfigured instance credential chain defined locally as this will interfere with the registration script.\n-\nTo send container logs to CloudWatch Logs, make sure that you create and specify a task execution IAM role in your task definition.\n-\nWhen an external instance is registered to a cluster, the\necs.capability.externalattribute is associated with the instance. This attribute identifies the instance as an external instance. You can add custom attributes to your external instances to use as a task placement constraint. For more information, see Custom attributes.\n-\nYou can add resource tags to your external instance. For more information, see External container instances.\n-\nECS Exec is supported on external instances. For more information, see Monitor Amazon ECS containers with ECS Exec.\n-\nThe following are additional considerations that are specific to networking with your external instances. For more information, see Networking .\n-\nService load balancing isn't supported.\n-\nService discovery isn't supported.\n-\nTasks that run on external instances must use the\nbridge,\nhost, or\nnonenetwork modes. The\nawsvpcnetwork mode isn't supported.\n-\nThere are Amazon ECS service domains in each AWS Region. These service domains must be allowed to send traffic to your external instances.\n-\nThe SSM Agent installed on your external instance maintains IAM credentials that are rotated every 30 minutes using a hardware fingerprint. If your external instance loses connection to AWS, the SSM Agent automatically refreshes the credentials after the connection is re-established. For more information, see Validating on-premises servers and virtual machines using a hardware fingerprint in the AWS Systems Manager User Guide.\n-\n-\nThe\nUpdateContainerAgentAPI isn't supported. For instructions on how to update the SSM Agent or the Amazon ECS agent on your external instances, see Updating the AWS Systems Manager agent and Amazon ECS container agent on an external instance.\n-\nAmazon ECS capacity providers aren't supported. To create a service or run a standalone task on your external instances, use the\nEXTERNALlaunch type.\n-\nSELinux isn't supported.\n-\nUsing Amazon EFS volumes or specifying an\nEFSVolumeConfigurationisn't supported.\n-\nIntegration with App Mesh isn't supported.\n-\nIf you use the console to create an external instance task definition, you must create the task definition with the console JSON editor.\n-\nWhen you run ECS Anywhere on Windows, you must use your own Windows license on the on-premises infrastructure.\n-\nWhen you use a non Amazon ECS-optimized AMI, run the following commands on the external container instance to configure rules to use IAM roles for tasks. For more information, see External instance additional configuration.\n$ sysctl -w net.ipv4.conf.all.route_localnet=1 $ iptables -t nat -A PREROUTING -p tcp -d 169.254.170.2 --dport 80 -j DNAT --to-destination 127.0.0.1:51679 $ iptables -t nat -A OUTPUT -d 169.254.170.2 -p tcp -m tcp --dport 80 -j REDIRECT --to-ports 51679\nNetworking\nAmazon ECS external instances are optimized for running applications that generate outbound traffic or process data. If your application requires inbound traffic, such as a web service, the lack of Elastic Load Balancing support makes running these workloads less efficient because there isn't support for placing these workloads behind a load balancer.\nThe following are additional considerations that are specific to networking with your external instances.\n-\nService load balancing isn't supported.\n-\nService discovery isn't supported.\n-\nLinux tasks that run on external instances must use the\nbridge,\nhost, or\nnonenetwork modes. The\nawsvpcnetwork mode isn't supported.\nFor more information about each network mode, see Amazon ECS task networking options for the EC2 launch type.\n-\nWindows tasks that run on external instances must use the\ndefaultnetwork mode.\n-\nThere are Amazon ECS service domains in each Region and must be allowed to send traffic to your external instances.\n-\nThe SSM Agent installed on your external instance maintains IAM credentials that are rotated every 30 minutes using a hardware fingerprint. If your external instance loses connection to AWS, the SSM Agent automatically refreshes the credentials after the connection is re-established. For more information, see Validating on-premises servers and virtual machines using a hardware fingerprint in the AWS Systems Manager User Guide.\nThe following domains are used for communication between the Amazon ECS service and the\nAmazon ECS agent that's installed on your external instance. Make sure that traffic is\nallowed and that DNS resolution works. For each endpoint,\nregion represents the Region identifier for an AWS\nRegion that's supported by Amazon ECS, such as\nus-east-2 for the\nUS East (Ohio) Region. The endpoints for all Regions that you use should be\nallowed. For the\necs-a and\necs-t endpoints, you should\ninclude an asterisk (for example,\necs-a-*).\n-\necs-a-*.— This endpoint is used when managing tasks.\nregion.amazonaws.com\n-\necs-t-*.— This endpoint is used to manage task and container metrics.\nregion.amazonaws.com\n-\necs.— This is the service endpoint for Amazon ECS.\nregion.amazonaws.com\n-\nssm.— This is the service endpoint for AWS Systems Manager.\nregion.amazonaws.com\n-\nec2messages.— This is the service endpoint that AWS Systems Manager uses to communicate between the Systems Manager agent and the Systems Manager service in the cloud.\nregion.amazonaws.com\n-\nssmmessages.— This is the service endpoint that is required to create and delete session channels with the Session Manager service in the cloud.\nregion.amazonaws.com\n-\nIf your tasks require communication with any other AWS services, make sure that those service endpoints are allowed. Example applications include using Amazon ECR to pull container images or using CloudWatch for CloudWatch Logs. For more information, see Service endpoints in the AWS General Reference.\nAmazon FSx for Windows File Server with ECS Anywhere\nIn order to use the Amazon FSx for Windows File Server with Amazon ECS external instances you must establish a connection between your on-premises data center and the AWS Cloud. For information about the options for connecting your network to your VPC, see Amazon Virtual Private Cloud Connectivity Options.\ngMSA with ECS Anywhere\nThe following use cases are supported for ECS Anywhere.\n-\nThe Active Directory is in the AWS Cloud - For this configuration, you create a connection between your on-premises network and the AWS Cloud using an AWS Direct Connect connection. For information about how to create the connection, see Amazon Virtual Private Cloud Connectivity Options.You create an Active Directory in the AWS Cloud. For information about how to get started with AWS Directory Service, see Setting up AWS Directory Service in the AWS Directory Service Administration Guide. You can then join your external instances to the domain using the AWS Direct Connect connection. For information about working with gMSA with Amazon ECS, see Learn how to use gMSAs for EC2 Windows containers for Amazon ECS.\n-\nThe Active Directory is in the on-premises data center. - For this configuration, you join your external instances to the on-premises Active Directory. You then use the locally available credentials when you run the Amazon ECS tasks.",
  "title": "Amazon ECS clusters for the external launch type",
  "author": "",
  "date": "2022-06-30"
}