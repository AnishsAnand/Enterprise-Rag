{
  "text": "AWS Fargate for Amazon ECS\nAWS Fargate is a technology that you can use with Amazon ECS to run containers\nWhen you run your tasks and services with the Fargate launch type, you\npackage your application in containers, specify the CPU and memory requirements, define\nnetworking and IAM policies, and launch the application. Each Fargate task\nhas its own isolation boundary and does not share the underlying kernel, CPU resources,\nmemory resources, or elastic network interface with another task. You configure your task\ndefinitions for Fargate by setting the\nrequiresCompatibilities\ntask definition parameter to\nFARGATE. For more information, see Launch types.\nFargate offers platform versions for Amazon Linux 2 (platform version 1.3.0), Bottlerocket operating system (platform version 1.4.0), and Microsoft Windows 2019 Server Full and Core editions.Unless otherwise specified, the information on this page applies to all Fargate platforms.\nThis topic describes the different components of Fargate tasks and services, and calls out special considerations for using Fargate with Amazon ECS.\nFor information about the Regions that support Linux containers on Fargate, see Linux containers on AWS Fargate.\nFor information about the Regions that support Windows containers on Fargate, see Windows containers on AWS Fargate.\nWalkthroughs\nFor information about how to get started using the console, see:\nFor information about how to get started using the AWS CLI, see:\nCapacity providers\nThe following capacity providers are available:\n-\nFargate\n-\nFargate Spot - Run interruption tolerant Amazon ECS tasks at a discounted rate compared to the AWS Fargate price. Fargate Spot runs tasks on spare compute capacity. When AWS needs the capacity back, your tasks will be interrupted with a two-minute warning. For more information, see Amazon ECS clusters for Fargate.\nTask definitions\nTasks that use the Fargate launch type don't support all of the Amazon ECS task definition parameters that are available. Some parameters aren't supported at all, and others behave differently for Fargate tasks. For more information, see Task CPU and memory.\nPlatform versions\nAWS Fargate platform versions are used to refer to a specific runtime environment for Fargate task infrastructure. It is a combination of the kernel and container runtime versions. You select a platform version when you run a task or when you create a service to maintain a number of identical tasks.\nNew revisions of platform versions are released as the runtime environment evolves, for example, if there are kernel or operating system updates, new features, bug fixes, or security updates. A Fargate platform version is updated by making a new platform version revision. Each task runs on one platform version revision during its lifecycle. If you want to use the latest platform version revision, then you must start a new task. A new task that runs on Fargate always runs on the latest revision of a platform version, ensuring that tasks are always started on secure and patched infrastructure.\nIf a security issue is found that affects an existing platform version, AWS creates a new patched revision of the platform version and retires tasks running on the vulnerable revision. In some cases, you may be notified that your tasks on Fargate have been scheduled for retirement. For more information, see Task retirement and maintenance for AWS Fargate on Amazon ECS .\nFor more information see Fargate platform versions for Amazon ECS.\nService load balancing\nYour Amazon ECS service on AWS Fargate can optionally be configured to use Elastic Load Balancing to distribute traffic evenly across the tasks in your service.\nAmazon ECS services on AWS Fargate support the Application Load Balancer, Network Load Balancer, and load balancer types. Application Load Balancers are used to route HTTP/HTTPS (or layer 7) traffic. Network Load Balancers are used to route TCP or UDP (or layer 4) traffic. For more information, see Use load balancing to distribute Amazon ECS service traffic.\nWhen you create a target group for these services, you must choose\nip as\nthe target type, not\ninstance. This is because tasks that use the\nawsvpc network mode are associated with an elastic network interface,\nnot an Amazon EC2 instance. For more information, see Use load balancing to distribute Amazon ECS service traffic.\nUsing a Network Load Balancer to route UDP traffic to your Amazon ECS on AWS Fargate tasks is only supported when using platform version 1.4 or later.\nUsage metrics\nYou can use CloudWatch usage metrics to provide visibility into your accounts usage of resources. Use these metrics to visualize your current service usage on CloudWatch graphs and dashboards.\nAWS Fargate usage metrics correspond to AWS service quotas. You can configure alarms that alert you when your usage approaches a service quota. For more information about AWS Fargate service quotas, Amazon ECS endpoints and quotas in the Amazon Web Services General Reference..\nFor more information about AWS Fargate usage metrics, see AWS Fargate usage metrics.",
  "title": "AWS Fargate for Amazon ECS",
  "author": "",
  "date": "2019-01-01"
}